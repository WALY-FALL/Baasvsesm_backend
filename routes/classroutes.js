
import express from "express";
import {createClass, getClasseById, getMyClasses, updateClass, deleteClass} from "../controller/classcontroller.js";
import { protect } from "../middlewares/authMiddleware.js";
import Classe from "../models/classmodel.js";


const router = express.Router();//creation de l'objet router

  // üîπ Route publique : r√©cup√©rer toutes les classes d‚Äôun prof
router.get("/profs/:profId", async (req, res) => {
  try {
    const classes = await Classe.find({ profId: req.params.profId });

    if (!classes || classes.length === 0) {
      return res.status(404).json({
        success: false,
        message: "Aucune classe trouv√©e pour ce professeur.",
      });
    }

    res.status(200).json({
      success: true,
      message: "Classes r√©cup√©r√©es avec succ√®s.",
      classes,
    });
  } catch (err) {
    console.error("Erreur lors de la r√©cup√©ration des classes :", err);
    res.status(500).json({
      success: false,
      message: "Erreur serveur lors de la r√©cup√©ration des classes.",
      error: err.message,
    });
  }
});

// Route pour cr√©er une classe (prot√©g√©e par auth)
router.post("/create", protect, createClass);

//router.get("/classe/:id", getClasseById);

// Route pour r√©cup√©rer MES classes (prot√©g√©e aussi)
router.get("/my-classes", protect, getMyClasses);

router.get("/:id", protect, getClasseById);          // Voir une classe par son ID

// Modifier une classe (prot√©g√©)
router.put("/update/:id", protect, updateClass);

// Supprimer une classe (prot√©g√©)
router.delete("/delete/:id", protect, deleteClass);

export default router;
